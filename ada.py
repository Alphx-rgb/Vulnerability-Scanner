from typing import Counter
import requests
from bs4 import BeautifulSoup
from langdetect import detect
import html5lib
import re,os

header = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0", 
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", 
            "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", 
            "Connection": "close", "Upgrade-Insecure-Requests": "1"} 

def ADA_check(url):
        os.chdir("report")
        no_of_notfollow = 0
        sn_n0 = 1
        f=open("ADA Report.txt","w")
        f.write(url+"\n\n")
        f.write("Info for ADA Guidelines :\n")
        response = requests.get(url , headers = header)
        soup = BeautifulSoup(response.text,'html.parser')
        
        for image in soup.find_all('img'):
            if(image.get('alt')==""):
                f.write(str(sn_n0) + '''. This URL don't follow WCAG2A 1.1.1 
        ==> don't have alt tags in Images\n''')
                sn_n0+=1
                no_of_notfollow+=1
                break
            
        for link in soup.find_all('a'):
                for image_link in link.find_all('img'):
                        if(image_link.get('alt')==""):
                            f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 1.1.1 
        ==>  don't have alt tags in Images used as Links \n''')
                            sn_n0+=1
                            no_of_notfollow+=1
                            break
                break
            
        for link in soup.find_all('button'):
            for image_link in link.find_all('img'):
                if(image_link.get('alt')==""):
                    f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 1.1.1 
        ==>  don't have alt tags in Images used as Button \n''')
                    sn_n0+=1
                    no_of_notfollow+=1
                    break
            break

        for frame in soup.find_all('frame'):
                if(frame.get('title')==""):
                    f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 1.1.1 
        ==>  don't have alt tags in Frame Tags\n''')
                    sn_n0+=1
                    no_of_notfollow+=1
                    break

        for iframe in soup.find_all('iframe'):
                if(iframe.get('title')==""):
                    f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 1.1.1 
        ==>  don't have alt tags in iFrame Tags\n''')
                    sn_n0+=1
                    no_of_notfollow+=1
                    break

        for autoplay in soup.find_all('video'):
                if(autoplay.get('autoplay')):
                    f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 1.4.2
        ==>  Have autoplay in vedios having audio\n''')
                    sn_n0+=1
                    no_of_notfollow+=1
                    break
                
        for mutes in soup.find_all('video'):
                if(mutes.get('muted') and mutes.get('alt')==""):
                    f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 1.2.1
        ==>  Don't have alt tags in Muted Vedio\n''')
                    sn_n0+=1
                    no_of_notfollow+=1
                    break

        for tracks in soup.find_all('track'):
            if(tracks.get('kind') != 'subtitles'):
                f.write(str(sn_n0) + '''. this URL don't follow WCAG2AA 1.2.5
        ==>  Don't have subtitles in vedio\n''')
                sn_n0+=1
                no_of_notfollow+=1
                break

        for image_link in link.find_all('a'):
            if(image_link.get('tabIndex')=="false"):
                f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 1.1.1 
        ==>  Links have NullTab attribute \n''')
                sn_n0+=1
                no_of_notfollow+=1
                break
        # language --> //ajay code added;        
        document = html5lib.parse(response.text)
        lang = document.attrib.get("lang")
        soup = BeautifulSoup(response.text , "html.parser")
        [s.decompose() for s in soup("script")]  # remove <script> elements
        body_text = soup.body.get_text()
        # print(detect(body_text))
        try:
                if( lang not in detect(body_text) and detect(body_text) not in lang ):
                    f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 3.1.2 
                ==>  If a portion of the page is in a different language, use the lang attribute is not given\n''')
                    sn_n0+=1
                    no_of_notfollow+=1
        except:
                pass
        #if media query is there it follow ADA Guideline
        for css in soup.find_all('link'):
            if(link.get('media')==""):
                f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 2.4.3 
        ==>  The page is not Responsive\n''')
                sn_n0+=1
                no_of_notfollow+=1
        #with CSS-File
        # for css in soup.find_all("link"):
        #     if css.attrs.get("href"):
        #         _url = css.attrs.get("href")
        #         u = url + _url
        #         r = requests.get(u,headers=header).text
                #animation
        #         data = re.findall('@keyframes',r)
        #         if(len(data)>0):
        #             f.write(str(sn_n0) + '''. this URL don't follow WCAG2A 2.2.2 and 2.3.1 
        # ==>  The page has Animations\n''')
        #             sn_n0+=1
        #             no_of_notfollow+=1
        




        if no_of_notfollow == 0:
            f.write("This URL follows ADA Guidelines")

        f.close()
        os.chdir("./..")

if __name__ == "__main__":
        url = input('ENTER YOUR TARGET URL HERE: ')
        ADA_check(url)
print(os.getcwd())